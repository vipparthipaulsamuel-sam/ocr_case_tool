{% extends "base.html" %}
{% block content %}
<h2>Case: {{ case.name }}</h2>
<p class="text-muted">Owner: {{ case.owner.email }}</p>

<!-- Notes -->
<h4 class="mt-4">Notes</h4>
<ul class="list-group mb-3">
  {% for n in notes %}
  <li class="list-group-item">
    <div class="small text-muted">{{ n.created_at.strftime("%Y-%m-%d %H:%M") }} by {{ n.author.name }}</div>
    <div>{{ n.content }}</div>
  </li>
  {% else %}
  <li class="list-group-item text-muted">No notes yet.</li>
  {% endfor %}
</ul>
<form class="card card-body mb-3" method="post" action="{{ url_for('add_note', case_id=case.id) }}">
  <textarea class="form-control mb-2" name="content" placeholder="Write a note..." required></textarea>
  <button class="btn btn-primary">Add Note</button>
</form>

<!-- Payments FIRST -->
<h4 class="mt-4">Payments</h4>
<div class="table-responsive">
  <table class="table table-bordered table-sm align-middle mb-3">
    <thead>
      <tr>
        <th>#</th>
        <th>Bank (Debited)</th>
        <th>UTR</th>
        <th>UPI Ref No</th>
        <th>Amount (₹)</th>
        <th>Date</th>
        <th>Time</th>
        <th>UPI ID From</th>
        <th>UPI ID To</th>
        <th>Transaction ID</th>
        <th>Bank (Credited)</th>
        <th>Status</th>
        <th>Channel</th>
        <th style="width:150px">Actions</th>
      </tr>
    </thead>
    <tbody>
      {% for p in payments %}
      <tr>
        <td>{{ loop.index }}</td>
        <td>{{ p.bank_name or '' }}</td>
        <td>{{ p.utr or '' }}</td>
        <td>{{ p.upi_txn_id or '' }}</td>
        <td>{% if p.amount_inr is not none %}{{ "%.2f"|format(p.amount_inr) }}{% endif %}</td>
        <td>{{ p.txn_date_str }}</td>
        <td>{{ p.txn_time_str }}</td>
        <td>{{ p.payer_name or '' }}</td>
        <td>{{ p.payee_vpa or '' }}</td>
        <td>{{ p.upi_txn_id or '' }}</td>
        <td>{{ p.payee_name or '' }}</td>
        <td>{{ p.txn_status or '' }}</td>
        <td>{{ p.channel or '' }}</td>
        <td class="text-nowrap">
          <button class="btn btn-sm btn-secondary"
                  data-bs-toggle="modal"
                  data-bs-target="#mapModal-{{ p.id }}">
            Map
          </button>
          <a class="btn btn-sm btn-outline-secondary"
             href="{{ url_for('payments.edit', payment_id=p.id) }}">Edit</a>
          <form class="d-inline"
                method="post"
                action="{{ url_for('payments.delete_payment', payment_id=p.id) }}"
                onsubmit="return confirm('Delete this payment?');">
            <button class="btn btn-sm btn-outline-danger" type="submit">Delete</button>
          </form>
        </td>
      </tr>

      <!-- Mapper Modal -->
      <div class="modal fade" id="mapModal-{{ p.id }}" tabindex="-1" aria-hidden="true">
        <div class="modal-dialog modal-xl modal-dialog-scrollable">
          <div class="modal-content">
            <div class="modal-header">
              <h5 class="modal-title">Map OCR → Fields (Payment #{{ p.id }})</h5>
              <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
              <div class="row g-3">
                <!-- OCR chips (line-by-line to mirror screenshot layout) -->
                <div class="col-12 col-lg-6">
                  <div class="d-flex justify-content-between align-items-center mb-2">
                    <strong>OCR Text</strong>
                    <small class="text-muted">Drag a chip, or click a chip to append to the focused field.</small>
                  </div>

                  <div class="ocr-chip-box border rounded p-2" style="max-height: 240px; overflow:auto;">
                    {% set lines = (p.raw_text or '').split('\n') %}
                    {% for line in lines if line.strip() %}
                      <div class="mb-1">
                        {% for tok in line.split(' ') if tok.strip() %}
                          <span class="ocr-chip" draggable="true" data-token="{{ tok|e }}">{{ tok }}</span>
                        {% endfor %}
                      </div>
                    {% endfor %}
                  </div>

                  {% if p.source_filename %}
                    <div class="mt-3">
                      <strong>Screenshot preview</strong>
                      <img
                        src="{{ url_for('payments.serve_upload_file', filename=p.source_filename) }}"
                        alt="screenshot"
                        class="img-fluid rounded border">
                      <div class="mt-1">
                        <a href="{{ url_for('payments.serve_upload_file', filename=p.source_filename) }}" target="_blank">
                          Open full size
                        </a>
                      </div>
                    </div>
                  {% endif %}
                </div>

                <!-- Mapped form -->
                <div class="col-12 col-lg-6">
                  <form method="post" action="{{ url_for('payments.edit', payment_id=p.id) }}" class="mapper-form">
                    <div class="row g-2">
                      <div class="col-12">
                        <label class="form-label">Bank (Debited)</label>
                        <input class="form-control droppable" name="bank_name" value="{{ p.bank_name or '' }}">
                      </div>

                      <div class="col-6">
                        <label class="form-label">UTR</label>
                        <input class="form-control droppable" name="utr" value="{{ p.utr or '' }}">
                      </div>
                      <div class="col-6">
                        <label class="form-label">UPI Ref / Txn ID</label>
                        <input class="form-control droppable" name="upi_txn_id" value="{{ p.upi_txn_id or '' }}">
                      </div>

                      <div class="col-6">
                        <label class="form-label">Amount (₹)</label>
                        <input class="form-control droppable" name="amount_inr"
                               value="{{ ('%.2f' % p.amount_inr) if p.amount_inr is not none }}">
                      </div>
                      <div class="col-3">
                        <label class="form-label">Date</label>
                        <input class="form-control droppable" name="date"
                               value="{{ p.txn_time.strftime('%Y-%m-%d') if p.txn_time }}">
                      </div>
                      <div class="col-3">
                        <label class="form-label">Time</label>
                        <input class="form-control droppable" name="time"
                               value="{{ p.txn_time.strftime('%H:%M') if p.txn_time }}">
                      </div>

                      <div class="col-6">
                        <label class="form-label">UPI ID From (Payer)</label>
                        <input class="form-control droppable" name="payer_name" value="{{ p.payer_name or '' }}">
                      </div>
                      <div class="col-6">
                        <label class="form-label">UPI ID To (VPA)</label>
                        <input class="form-control droppable" name="payee_vpa" value="{{ p.payee_vpa or '' }}">
                      </div>

                      <div class="col-6">
                        <label class="form-label">Bank (Credited) / Payee Name</label>
                        <input class="form-control droppable" name="payee_name" value="{{ p.payee_name or '' }}">
                      </div>
                      <div class="col-3">
                        <label class="form-label">Status</label>
                        <input class="form-control droppable" name="txn_status" value="{{ p.txn_status or '' }}">
                      </div>
                      <div class="col-3">
                        <label class="form-label">Channel</label>
                        <input class="form-control droppable" name="channel" value="{{ p.channel or '' }}">
                      </div>

                      <div class="col-12">
                        <label class="form-label">Remarks</label>
                        <input class="form-control droppable" name="remarks" value="{{ p.remarks or '' }}">
                      </div>
                      <div class="col-12">
                        <label class="form-label">Notes</label>
                        <textarea class="form-control droppable" name="notes" rows="2">{{ p.notes or '' }}</textarea>
                      </div>
                    </div>

                    <div class="mt-3 d-flex justify-content-end gap-2">
                      <button type="button" class="btn btn-outline-secondary" data-bs-dismiss="modal">Close</button>
                      <button class="btn btn-primary">Save</button>
                    </div>
                  </form>
                </div>
              </div><!-- row -->
            </div><!-- modal-body -->
          </div>
        </div>
      </div>
      {% endfor %}
    </tbody>
  </table>
</div>

<form class="card card-body mb-3"
      method="post"
      action="{{ url_for('payments.upload_case', case_id=case.id) }}"
      enctype="multipart/form-data">
  <div class="d-flex align-items-center gap-2">
    <input class="form-control"
           type="file"
           name="files"
           accept=".jpg,.jpeg,.png,.webp,.tif,.tiff"
           multiple>
    <button class="btn btn-primary" type="submit">Upload Payment</button>
    <a class="btn btn-outline-secondary" href="{{ url_for('payments.export_pdf_case', case_id=case.id) }}">
      Export Screenshots (PDF)
    </a>
  </div>
  <small class="text-muted mt-2">You can select multiple screenshots. Supported: JPG, PNG, WEBP, TIFF.</small>
</form>

<!-- Uploads AFTER -->
<h4 class="mt-4">Uploads</h4>
<ul class="list-group mb-3">
  {% for up in uploads %}
  <li class="list-group-item">
    <strong>{{ up.original_filename }}</strong>
    <div class="small text-muted">
      Uploaded {{ up.uploaded_at.strftime("%Y-%m-%d %H:%M") }} by {{ up.uploader.name }}
    </div>
    {% if up.ocr_text %}
    <pre class="mt-2" style="white-space: pre-wrap">{{ up.ocr_text.text }}</pre>
    {% endif %}
    <div class="mt-2">
      <a class="btn btn-sm btn-outline-secondary" href="{{ url_for('serve_upload', upload_id=up.id) }}" target="_blank">View</a>
      <form class="d-inline" method="post" action="{{ url_for('rerun_ocr', upload_id=up.id) }}">
        <button class="btn btn-sm btn-outline-primary">Re-run OCR</button>
      </form>
    </div>
  </li>
  {% else %}
  <li class="list-group-item text-muted">No uploads yet.</li>
  {% endfor %}
</ul>

<form class="card card-body mb-3" method="post" action="{{ url_for('upload_file', case_id=case.id) }}" enctype="multipart/form-data">
  <div class="d-flex align-items-center gap-2">
    <input class="form-control"
           type="file"
           name="file"
           accept=".jpg,.jpeg,.png"
           required>
    <button class="btn btn-primary">Upload</button>
  </div>
</form>

<!-- Drag/drop + click-to-append logic -->
<style>
  .ocr-chip { display:inline-block; padding:.2rem .5rem; margin:.15rem; background:#eef2ff; border:1px solid #c7d2fe; border-radius:999px; cursor:grab; user-select:none; }
  .droppable { min-height: 38px; }
  .droppable.drop-over { outline: 2px dashed #0d6efd; outline-offset: 2px; }
</style>
<script>
(function () {
  let focusedInput = null;

  // spacing helpers
  const needsSpaceBefore = (s) => {
    if (!s) return false;
    const tail = s.slice(-1);
    return ![' ', '\u00A0', '(', '/', '-', ''].includes(tail);
  };
  const skipSpaceBeforeToken = (tok) => [',','.',';',':',')','%'].includes((tok||'')[0]);
  const cleanSpaces = (s) => s.replace(/\s{2,}/g,' ')
                              .replace(/\s+([,.:;)%])/g,'$1')
                              .replace(/([(])\s+/g,'$1')
                              .trimStart();

  function appendToken(inputEl, tok) {
    if (!inputEl) return;
    const cur = inputEl.value || '';
    const sep = (cur && needsSpaceBefore(cur) && !skipSpaceBeforeToken(tok)) ? ' ' : '';
    inputEl.value = cleanSpaces(cur + sep + tok);
    try { inputEl.setSelectionRange(inputEl.value.length, inputEl.value.length); } catch(e) {}
    inputEl.dispatchEvent(new Event('input',  { bubbles: true }));
    inputEl.dispatchEvent(new Event('change', { bubbles: true }));
  }

  // Focus tracking
  document.addEventListener('focusin', (e) => {
    if (e.target.classList?.contains('droppable')) focusedInput = e.target;
  });

  // CHIP CLICK: append to currently focused input
  document.addEventListener('click', (e) => {
    const chip = e.target.closest('.ocr-chip');
    if (!chip || !focusedInput) return;
    const tok = chip.dataset.token || chip.textContent;
    appendToken(focusedInput, tok);
  });

  // CHIP DRAGSTART (provide data)
  document.addEventListener('dragstart', (e) => {
    const chip = e.target.closest('.ocr-chip');
    if (!chip) return;
    const tok = chip.dataset.token || chip.textContent;
    e.dataTransfer.setData('text/plain', tok);
    e.dataTransfer.effectAllowed = 'copy';
  });

  // ***** IMPORTANT: use CAPTURE phase to kill native drop that replaces text *****
  document.addEventListener('dragover', (e) => {
    const inp = e.target.closest && e.target.closest('.droppable');
    if (!inp) return;
    e.preventDefault();
    e.stopPropagation();
    e.dataTransfer.dropEffect = 'copy';
    inp.classList.add('drop-over');
  }, true); // capture

  document.addEventListener('dragleave', (e) => {
    const inp = e.target.closest && e.target.closest('.droppable');
    if (!inp) return;
    inp.classList.remove('drop-over');
  }, true); // capture

  document.addEventListener('drop', (e) => {
    const inp = e.target.closest && e.target.closest('.droppable');
    if (!inp) return;
    // kill native insertion completely
    e.preventDefault();
    e.stopPropagation();

    inp.classList.remove('drop-over');
    const tok = e.dataTransfer.getData('text/plain');

    // move caret to end and append
    try { inp.setSelectionRange(inp.value.length, inp.value.length); } catch(_) {}
    appendToken(inp, tok);
    inp.focus();
  }, true); // capture

  // Cleanup on blur
  document.addEventListener('blur', (e) => {
    const inp = e.target.closest?.('input.droppable, textarea.droppable');
    if (!inp) return;
    if (inp.name === 'amount_inr') {
      const m = (inp.value || '').match(/[0-9][0-9,]*\.?[0-9]{0,2}/);
      if (m) inp.value = m[0].replace(/,/g,'');
    } else {
      inp.value = cleanSpaces(inp.value || '');
    }
  }, true);
})();
</script>
{% endblock %}